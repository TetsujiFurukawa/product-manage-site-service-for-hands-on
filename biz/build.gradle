plugins {
	id "org.springframework.boot" version "${springbootVersion}"
	id "io.spring.dependency-management" version "${springDependencyManagementVersion}"
}

bootJar {
	enabled = false
}

jar {
	enabled = true
}

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation "org.springframework.boot:spring-boot-starter-aop:${springbootVersion}"
	developmentOnly "org.springframework.boot:spring-boot-devtools:${springbootVersion}"
	testImplementation("org.springframework.boot:spring-boot-starter-test:${springbootVersion}") {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	implementation "org.springframework.session:spring-session-core:${springSessionCoreVersion}"
	annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
	compileOnly "org.projectlombok:lombok:${lombokVersion}"
	runtimeOnly "com.h2database:h2:${h2Version}"
	implementation "org.flywaydb:flyway-core:${flywayVersion}"
	implementation "org.mybatis.spring.boot:mybatis-spring-boot-starter:${myBatisSpringBootStarter}"
	implementation group: "commons-io", name: "commons-io", version: "${commonsIoVersion}"
	implementation group: "org.apache.commons", name: "commons-lang3", version: "${commonsLang3Version}"
}

test {
	useJUnitPlatform()
}